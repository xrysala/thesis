An app developer must be able to include the code of a dataset type in his app artifact and create a dataset of that type when deploying the app . 
An app developer must be able to deploy a new version of a dataset type as part of deploying a new version of the app that includes it and he expects that all dataset instances of that type that were created as part of the app deployment start using the new code . 
An app developer must be able to deploy a new version of a dataset type as part of an app artifact ,without affecting other datasets of this type . 
An app developer must be able to explore a dataset instance of a type that was deployed as part of an app . 
An app developer must be able to ensure that when he deploys an artifact without creating an app this will not create any dataset types or instances . 
An app developer must be able to share a dataset type across multiple applications that include the dataset type 's code in their artifacts . 
An app developer must be able to ensure that when he deploys a new version of an app that includes a shared dataset type that all dataset instances created by this app start using the new code but all dataset instances created by other apps remain unchanged . 
An app developer must be able to ensure that when he deploys a new version of an app that includes an older version of a dataset type deployed by another app and he expects that the dataset instances created by this app use the dataset type code included in this app . 
An app developer must be able to ensure that when he deploys a new version of an app that includes a different version of a dataset type deployed by another app and this app shares a dataset instance of this type with the other app the deployment will fail with a version conflict error . 
An app developer must be able to share a dataset type that he had previously deployed as part of an app . 
A dataset developer must be able to deploy a dataset type independent from any app and allow apps to create and use dataset instances of that type . 
A dataset developer must be able to have the option of forcing applications to have the dataset code injected at runtime . 
A dataset developer must be able to have an archetype that helps him package his dataset type properly . 
A dataset developer must be able to separate the interface from the implementation of a dataset type . 
An app developer must be able to only depend on the interface of a dataset type in his app and has the system inject the implementation at runtime . 
An app developer must be able to write unit tests for an app that depends on the interface of a dataset type . 
A dataset developer must be able to assign explicit versions to the code of a dataset type . 
A dataset developer must be able to deploy a new version of a dataset type without affecting the dataset instances of that type . 
An app developer must be able to create a dataset instance with a specific version of a dataset type . 
A dataset developer must be able to explore a dataset instance created from a dataset type that was deployed by itself . 
A dataset developer must be able to delete outdated versions of a dataset type and he expects this to fail if there are any dataset instances with that version of the type . 
A dataset developer must be able to list all dataset instances that use a dataset type or a specific version of a type . 
A data scientist must be able to create a dataset instance of an existing dataset type without writing code . 
A data scientist must be able to upgrade a dataset instance to a new version of its code . 
A hydrator user must be able to create a pipeline that reads or writes an existing dataset instance . 
A hydrator user must be able to specify an explicit version of the dataset types of the dataset instances created by his pipeline and he expects pipeline creation to fail if that results in incompatible upgrade of an existing dataset instance that is shared with other apps or pipelines . 
A hydrator user must be able to explore the datasets created by his pipeline . 
A hydrator user must be able to ensure that all dataset instances created by apps are available as sinks and sources for pipelines . 
An app developer must be able to ensure that all dataset instances created by Hydrator pipelines are accessible to the app . 
A plugin developer must be able to include the code for a dataset type in the plugin artifact . 
A plugin developer must be able to use a custom dataset type that was deployed independently or as part of an app inside the plugin . 
A plugin developer must be able to upgrade the code of a dataset type used by a dataset instance created by that plugin when he deploys a new version of the plugin and update the pipeline to use that version . 
A pipeline developer must be able to upgrade a dataset instance to a newer version of the code after the pipeline was created . 
A dataset developer must be able to have the option of implementing an upgrade step for when a dataset instance is upgraded to a new version of the dataset type . 
A dataset developer must be able to have a way to reject an upgrade of a dataset instance to a newer version of it type if the upgrade is not compatible . 
A dataset developer must be able to have the option of implementing a migration procedure that can be run after an upgrade of a dataset instance to a new version of it type . 
A developer must be able to take a dataset offline . 
A developer must be able to perform a long - running maintenance or migration procedure . 
"A dataset developer must be able to implement custom administrative operations such as "" compaction "" or "" rebalance "" that are no common to all dataset types . "
An app developer must be able to perform custom administrative operations on dataset instances from his app and the CLI and REST or the UI . 
A user must be able to find out what properties are supported by the dataset type what values are allowed and what the defaults are when creating a dataset instance . 
A user must be able to specify the schema of a dataset in a uniform way across all dataset types . 
A user must be able to specify schema as a JSON string . 
A user must be able to specify schema as a SQL schema string . 
A user must be able to configure time - to - live in a uniform way across all dataset types . 
A user must be able to see the properties that were used to configure a dataset instance . 
A user must be able to find out what properties of a dataset can be updated . 
A user must be able to update the properties of a dataset instance and he expects this to fail if the new properties are not compatible with a meaningful error message . 
A user must be able to update a single property of a dataset instance without knowing all other properties . 
A user must be able to remove a single property of a dataset instance without knowing all other properties . 
A user must be able to trigger a migration process for a dataset if updating its properties requires that . 
A user must be able to ensure that if reconfiguration of a dataset fails then no changes has taken effect . 
An app developer must be able to ensure that application creation fails if any of its datasets can not be created . 
An app developer must be able to ensure that application redeployment fails if any of its datasets can not be reconfigured . 
An app developer must be able to tolerate existing datasets if their properties are different but compatible when creating a dataset as part of app deployment . 
A pipeline designer must be able to get a meaningful error message when pipeline creation fails when he uses an existing dataset as a sink or source . 
A user must be able to specify as part of dataset configuration whether it is explorable . 
A user must be able to specify the explore schema separately . 
A user must be able to ensure that dataset creation fails if the dataset can not be enabled for explore . 
A user must be able to ensure that an update of explore never leads to silent loss of data or data available for explore . 
A user must be able to enable explore for a dataset that was not configured for explore initially . 
A user must be able to disable explore for a dataset that was configured for explore initially . 
